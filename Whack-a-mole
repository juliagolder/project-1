#julia golder
#4/5/18
#whackamole



from ggame import *
from random import randint

#constants
ROWS = 20
COLS = 40
CELL_SIZE = 20


#moves mole to a random location    
def moveBanana():
    data['frames'] = 0 #reset timer
    banana.x = randint(0,COLS-1)*CELL_SIZE
    banana.y = randint(0,ROWS-1)*CELL_SIZE

#increase score and display new text at bottom of screen
def updateScore():
    data['score'] += 10
    data['scoreText'].destroy() #remove old writing
    scoreBox = TextAsset('Score =' +str(data['score']))
    data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE))

#keeps track of how many frames have happened and moves banana if it has
#been more than 300 frames since last move
def step():
    data['frames'] +=1
    if data['frames']%300 == 0:
        moveBanana()

#sets up and runs the game
if __name__ == '__main__':
    
    #hold variables in a dictionary
    data = {}
    data['score'] = 0
    data['frames'] = 0

    #colors
    green = Color(0x006600, 1)
    brown = Color(0x8B4513, 1)
    yellow = Color(0xFFFF00,1)
    
    #graphics
    jungleBox = RectangleAsset(CELL_SIZE*COLS, CELL_SIZE*ROWS, LineStyle(1,green),green)
    monkeyBox = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,brown),brown)
    bananaBox = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
    scoreBox = TextAsset('Score = 0')
    
    
    Sprite(jungleBox)
    monkey = Sprite(monkeyBox)
    banana = Sprite(bananaBox,(CELL_SIZE*COLS/2, CELL_SIZE*ROWS/2))
    data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE))
    
    App().listenKeyEvent('keydown', 'right arrow',moveRight)
    App().listenKeyEvent('keydown', 'left arrow',moveLeft)
    App().listenKeyEvent('keydown', 'down arrow',moveDown)
    App().listenKeyEvent('keydown', 'up arrow',moveUp)
    App().run(step)


mouseClick - Should take one argument, event. The function should figure out which hole was clicked and decide if the mole is up or down (i.e. should points be awarded).

updateScore - Should take no arguments. The function should erase the old score and print the new one.

step - Should take no arguments. The function should go through each hole and randomly decide if a mole should be up or down in that hole. This function should also keep track of how many frames have passed and stop the game after a certain amount of time.

if __name__ == '__main__': This isn't really a function, but the rest of your code should be in this section (except any constants that you use). You will definitely need some dictionary variables.





#graphics
    
    scoreBox = TextAsset('Score = 0')
    
    data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE))

    scoreBox = TextAsset('Score = 0')
