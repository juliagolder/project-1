#julia golder
#4/5/18
#whackamole.py


from ggame import *
from random import randint

blue = Color(0x0000FF,1)
white = Color(0xFFFFFF,1)
brown = Color(0x8B4513, 1)

blackOutline = LineStyle(1,black)
whiteCircle = CircleAsset(100,blackOutline,white) #radius, outline, fill
brownOutline = LineStyle(1,brown)
mole = CircleAsset(100, brownOutline, brown)




def randomMole():
    num = randint(1,15)
    if num >= 13:
        Sprite(mole,(75,75))
    else:
        Sprite(whiteCircle,(75,75))
    if num <= 12 and num >= 10:
        Sprite(mole,(325,75))
    else:
        Sprite(whiteCircle,(325,75))
    if num <= 9 and num >= 7:
        Sprite(mole,(575,75))
    else:
        Sprite(whiteCircle,(575,75))
    if num == 6:
        Sprite(mole,(75,325))
    else:
        Sprite(whiteCircle,(75,325))
    if num <= 5 and num >= 3:
        Sprite(mole,(325,325))
    else:
        Sprite(whiteCircle,(325,325))
    if num <= 2 and num > 0:
        Sprite(mole,(575,325))
    else:
        Sprite(whiteCircle,(575,325))


    

def mouseClick(event):
    print(event.x , event.y)
    if event.x > 75 and event.x < 275 and event.y > 75 and event.y < 275:
        print ("circle1")
    elif event.x > 325 and event.x < 525 and event.y > 75 and event.y < 275:
        print ("circle2")
    elif event.x > 575 and event.x < 775 and event.y > 75 and event.y < 275:
        print ("circle3")
    elif event.x > 75 and event.x < 275 and event.y > 325 and event.y < 525:
        print ("circle4")
    elif event.x > 325 and event.x < 525 and event.y > 325 and event.y < 525:
        print ("circle5")
    elif event.x > 575 and event.x < 775 and event.y > 325 and event.y < 525:
        print ("circle6")
    else:
        print("not a circle")

def step():
    randomMole()



"""
 #increase score and display new text at bottom of screen
def updateScore():
    data['score'] += 10
    data['scoreText'].destroy() #remove old writing
    scoreBox = TextAsset('Score =' +str(data['score']))
    data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE))

#sets up and runs the game
if __name__ == '__main__':

    #hold variables in a dictionary
    data = {}
    data['score'] = 0
    data['frames'] = 0
"""

Sprite(whiteCircle,(75,75))
Sprite(whiteCircle,(325,75))
Sprite(whiteCircle,(575,75))
Sprite(whiteCircle,(75, 325))
Sprite(whiteCircle,(325, 325))
Sprite(whiteCircle,(575, 325))
App().listenMouseEvent('click', mouseClick)
App().run(step)


"""
if mouse Click > (76.00813202583113, 178.9708265802269) and < (275.62544845730685, 173.85737439222044) and < 176.3286295144702 75.67909238249595


if num > 0:
    print(num, 'is positive')
elif num < 0:
    print(num, 'is negative')
else:
    print(num, 'is zero')
    

171.21023678545802 275.1037277147488
324.76201865582397 176.92544570502432
420.98780196125324 77.72447325769855
524.3793350872996 170.78930307941653
424.0588375986606 277.14910858995137
575.5632623774217 170.78930307941653
667.6943314996412 75.67909238249595
775.1805788088974 167.72123176661265
678.9547955034681 277.14910858995137
76.00813202583113 421.3484602917342
172.23391533126045 317.03403565640195
275.62544845730685 420.32576985413294
175.30495096866778 524.6401944894652
325.78569720162636 425.4392220421394
420.98780196125324 325.21555915721234
525.4030136331021 419.3030794165316
427.1298732360679 524.6401944894652
575.5632623774217 420.32576985413294
670.7653671370485 322.14748784440843
773.1332217172925 415.2123176661264
677.9311169576656 521.5721231766613


def updateScore():
    data['score'] += 10
    data['scoreText'].destroy() #remove old writing
    scoreBox = TextAsset('Score =' +str(data['score']))
    data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE)) #change to circle area
    
#hold variables in a dictionary
    data = {}
    data['score'] = 0


data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE))
Mole = CircleAsset(100,blackOutline,white)



#moves mole to a random location
def moveMole():
    data['frames'] = 0 #reset timer
    mole.x = randint(0,COLS-1)*CELL_SIZE
    mole.y = randint(0,ROWS-1)*CELL_SIZE

#increase score and display new text at bottom of screen
def updateScore():
    data['score'] += 10
    data['scoreText'].destroy() #remove old writing
    scoreBox = TextAsset('Score =' +str(data['score']))
    data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE))

#keeps track of how many frames have happened and moves mole if it has
#been more than 300 frames since last move
def step():
    data['frames'] +=1
    if data['frames']%300 == 0:
        moveBanana()

#sets up and runs the game
if __name__ == '__main__':
    
    #hold variables in a dictionary
    data = {}
    data['score'] = 0
    data['frames'] = 0

    #colors
    moleColor = Color(0x8B4513, 1)
    ground = Color(0xF4A460, 1)
    yellow = Color(0xFFFF00,1)
    



    App().run()


 
 #graphics
    jungleBox = RectangleAsset(CELL_SIZE*COLS, CELL_SIZE*ROWS, LineStyle(1,ground),ground)
    moleBox = CircleAsset(RADIUS,LineStyle(1,moleColor),moleColor)
    scoreBox = TextAsset('Score = 0')
    
    
    for i in range(10): #putting a row of dots
    for j in range(12):
        Sprite(dot,(10+(2*RADIUS)*i,10+(2*RADIUS)*j))
    
    Sprite(jungleBox)
    mole = Sprite(moleBox,(CELL_SIZE*COLS/2, CELL_SIZE*ROWS/2))
    data['scoreText'] = Sprite(scoreBox,(0,ROWS*CELL_SIZE))
    

    App().run(step)
"""
